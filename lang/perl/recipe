pkgname=perl
pkgver=5.34.1
arcext=tar.xz
arcurlbase=https://www.cpan.org/src/5.0/
run_deps="bzip2 gdbm zlib"

_patch () {
    # extension に RPATH を埋め込むのをやめさせる。
    sed -i.orig 's/\$ld_run_path_shell.*LD_RUN_PATH/#&/' \
        cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm &&

    # いまビルドされたコマンドを叩くときに，いまビルドされた
    # libperl を LD_PRELOAD に設定するのを抑制する。
    #
    # libperl をプリロードすると，/bin/sh などが動かない。
    # /bin/sh などが使うダイナミックリンカ /lib/ld-linux が，
    # いまビルドしたバイナリと互換性がないため。
    #
    # libperl をリンクするバイナリに埋め込む RPATH を RUNPATH
    # に変更しているので，LD_PRELOAD は不要。LD_LIBRARY_PATH
    # だけでいい。
    sed -i.orig 's|CORE/\$libperl|& \&\& false|' Makefile.SH
}

_config () {
    # パラメタ編集は -D は定義，-Axxx=yyy は追加（ほかの操作
    # もある；Configure -h 参照），-Uxxx= は xxx の値を空に
    # する，-Uxxx は xxx を未定義にする。

    # -Duseshrplib は libperl を共有ライブラリとする。

    # -Dinc_version_list=none はインストールされている古い
    # バージョンの Perl のモジュールをいまビルドする Perl に
    # 使わせない（@INC に含めない）。

    # manXdir は自動算出に失敗して manXdir が空，manXext が
    # 0 となることがあったので明示する。また，man3ext は 3
    # ではなく 3pm とする。

    # locincpth，loclibpth はローカルデータの置き場所。
    # 既定値は典型的な場所。/usr/local とか。

    # glibpth はシステムライブラリの置き場所。既定値は /lib
    # とか /usr/lib とか。そこを探して見つかった基本的な
    # ライブラリを勝手にリンクしようとしてしまう。

    # -Wl,--enable-new-dtags は libperl にリンクするバイナリ
    # （bin/perl）に埋め込む RPATH を RUNPATH に変更する。
    # libperl は $prefix/lib ではなくさらに深い場所に
    # インストールされるので，それを探し出せるように RUNPATH
    # を埋め込む。

    sh Configure -de \
        -Dprefix="$prefix" \
        -Duseshrplib \
        -Dinc_version_list=none \
        -Dman1dir="$prefix"/share/man/man1 \
        -Dman1ext=1 \
        -Dman3dir="$prefix"/share/man/man3 \
        -Dman3ext=3pm \
        -Ulocincpth= \
        -Uloclibpth= \
        -Uglibpth= \
        -Accdlflags=-Wl,--enable-new-dtags \
        -Dusethreads \
        -Doptimize="$optflags"
}

_build () {
    # zlib や libbz2 は同梱のものではなくシステムに
    # インストールされているものを使わせる。
    #
    # ZLIB_INCLUDE= は，指定しないと，システムの zlib を
    # 使うよう指定しても同梱のヘッダファイルが #include
    # されてしまう。

    # 隠されているコマンドも見たければ NOECHO= を足す。

    BUILD_ZLIB=0 ZLIB_INCLUDE= BUILD_BZIP2=0 make "$@"
}

_test () {
    # t/op/magic.t は BusyBox の ps では失敗する。コマンド
    # ラインオプションが期待どおりではないため。

    # zlib 1.2.12 になって以下が失敗するようになった：
    #
    # * cpan/Compress-Raw-Zlib/t/02zlib.t
    # * cpan/IO-Compress/t/cz-03zlib-v1.t
    #
    # これで合格するようになりそう：
    #
    # https://github.com/Perl/perl5/commit/b864a746559843cd8bc1720eaf14c83faeb8fcc7
    #
    # ただし zlib 1.2.12 ではテストが通らないというだけでなく
    # 挙動もおかしいのかも。

    make test "$@"
}
