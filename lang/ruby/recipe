pkgname=ruby
pkgver=3.1.0
arcext=tar.xz
arcurlbase=https://cache.ruby-lang.org/pub/ruby/${pkgver%.*}/
run_deps="gmp libffi ncurses openssl readline zlib"

# ビルド後，こう始まる出力を（あれば）確認しておく：
#     *** Following extensions are not compiled:

_patch () {
    # テストやインストール中に実行された ruby や miniruby が
    # シェルコマンドを実行したとき，/bin/sh がライブラリの
    # 動的リンクに失敗して起動できないのを修正する。
    #
    # いまビルドした libruby.so を LD_PRELOAD に設定した
    # 状態で /bin/sh が叩かれるが，/bin/sh のダイナミック
    # リンカ /lib/ld-linux はいまビルドに使ったライブラリ
    # 置き場 $prefix/lib を知らないし，知らせても libc など
    # の非互換性で動かない。
    #
    # このビルドでは RPATH を埋め込まないようにしているので，
    # LD_PRELOAD を設定しなくても LD_LIBRARY_PATH だけでいい。
    #
    # そこで，LD_PRELOAD を設定しないようにする。

    sed -i.orig 's/env.*libruby_so/#&/' tool/runruby.rb
}

_config () {
    # --with-baseruby= はビルド中に使われる既存の ruby。Ruby
    # のソースをリポジトリから取得してビルドするときは必要だが，
    # リリース物からビルドするときは（Ruby による生成物がすでに
    # 同梱されているので）不要……とのことだけどビルドログを
    # 見るとリリース物のビルドでも既存の ruby が使われている
    # なあ。--without- にするとシェルスクリプトやいまビルドした
    # ruby が代わりに使われているようだ。
    #
    # なおインストール結果は --with- と --without- で diff が
    # 一致した。
    #
    # 使わなくていいなら使わないほうが堅い気がするので
    # --without- にしておく。
    #
    # http://blade.nagaokaut.ac.jp/cgi-bin/scat.rb/ruby/ruby-list/45408

    ./configure \
        --prefix="$prefix" \
        --disable-rpath \
        --enable-shared \
        --disable-install-doc \
        --disable-install-static-library \
        --without-baseruby \
        optflags="$optflags"
}

_build () {
    # make help でターゲットの説明が見られる。

    make V=1 "$@"
}

_test () {
    # テストにはいろいろなターゲットがあるが，たぶん CRuby
    # ユーザは make test，CRuby 開発者は make check という
    # 使いわけが想定されているのかと思う。
    #
    # ターゲット test-all が Ruby の全機能のテスト（ほかの
    # 複数のターゲットをまとめたものではない）。test-spec
    # もかな。make test はこれらをふくまない。
    #
    # make check はそれらもふくめて全テストをおこなう。
    # 今後あたらしいテストスイートが追加されたときは make
    # check はそれもふくむことが想定されている。
    #
    # https://bugs.ruby-lang.org/issues/14187
    # https://github.com/ko1/rubyhackchallenge/blob/master/JA/2_mri_structure.md

    make V=1 test "$@"
}

_install () {
    touch .fr-install-start

    # V=1 は native extension のビルドログを詳細にするため。
    # 出力は
    # PREFIX/lib/ruby/gems/VER/extensions/ARCH/VER/GEM/gem_make.out
    # にある。内容を確認したら削除していい。
    make V=1 install "$@" || return $?

    find "$DESTDIR$prefix"/lib/ruby/gems -name Makefile -newer .fr-install-start | sed 's|/Makefile$||' | while read dir; do
        fr_do cd \"$dir\" '&&' make distclean
    done

    echo Build logs, which you can delete:
    find "$DESTDIR$prefix"/lib/ruby/gems -name gem_make.out -newer .fr-install-start

    rm -f .fr-install-start
}
